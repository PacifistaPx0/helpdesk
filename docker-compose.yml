name: helpdesk

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: helpdesk_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-helpdesk}
      POSTGRES_USER: ${POSTGRES_USER:-helpdesk_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-helpdesk_password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init/postgres:/docker-entrypoint-initdb.d
    networks:
      - helpdesk_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-helpdesk_user} -d ${POSTGRES_DB:-helpdesk}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: helpdesk_redis
    ports:
      - "${REDIS_PORT:-6380}:6379"
    volumes:
      - redis_data:/data
    networks:
      - helpdesk_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Development with Hot Reload)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: helpdesk_backend
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    env_file:
      - ./backend/.env
    environment:
      - ENVIRONMENT=development
      - GIN_MODE=debug
      - DATABASE_URL=postgres://${POSTGRES_USER:-helpdesk_user}:${POSTGRES_PASSWORD:-helpdesk_password}@postgres:5432/${POSTGRES_DB:-helpdesk}?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - SMTP_HOST=mailhog
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - helpdesk_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/tmp
    command: ["air", "-c", ".air.toml"]

  # Mailhog for email testing
  # mailhog:
  #   image: mailhog/mailhog:latest
  #   container_name: helpdesk_mailhog
  #   ports:
  #     - "${MAILHOG_SMTP_PORT:-1025}:1025"
  #     - "${MAILHOG_WEB_PORT:-8025}:8025"
  #   networks:
  #     - helpdesk_network
  #   restart: unless-stopped

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: helpdesk_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@helpdesk.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - helpdesk_network
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  helpdesk_network:
    driver: bridge
